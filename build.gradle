buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
    classpath "org.grails.plugins:hibernate:4.3.10.5"
  }
}

plugins {
  id 'io.spring.dependency-management' version '0.5.4.RELEASE'
  id 'com.craigburke.bower-installer' version '2.5.1'
  id 'com.craigburke.karma' version '1.4.3'
}

version "0.1"
group "com.citronella.restaurants"

apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'asset-pipeline'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
  minifyJs = true
  minifyCss = true
}

repositories {
  mavenLocal()
  maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-dependencies"
  compile "org.grails:grails-web-boot"

  compile "org.grails.plugins:hibernate"
  compile "org.grails.plugins:cache"
  compile "org.hibernate:hibernate-ehcache"
  compile "org.grails.plugins:scaffolding"

  runtime "org.grails.plugins:asset-pipeline"

  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"

  // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
  testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

  console "org.grails:grails-console"

  // Spring REST Security
  compile 'org.grails.plugins:spring-security-rest:2.0.0.M2'
  compile 'org.grails.plugins:spring-security-rest-gorm:2.0.0.M2'

  // Making REST calls from functional tests
  testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7'

  // Angular Templates Plugin
  assets "com.craigburke.angular:angular-template-asset-pipeline:2.2.7"
}

bower {

  'jquery'('2.2.x') {
    source 'dist/jquery.js'
  }

  'bootstrap'('3.3.x') {
    source 'dist/css/bootstrap.css' >> 'css/'
    source 'dist/css/bootstrap-theme.css' >> 'css/'
    source 'dist/fonts/**' >> 'fonts/'
    source 'dist/js/bootstrap.js'
  }

  'angular'('1.5.x') {
    source 'angular.js'
    source 'angular-csp.css'
  }

  'angular-mocks'('1.5.x') {
    source 'angular-mocks.js'
  }

  'angular-route'('1.5.x') {
    source 'angular-route.js'
  }

  'angular-resource'('1.5.x') {
    source 'angular-resource.js'
  }

  'angular-bootstrap'('1.3.x') {
    source 'ui-bootstrap.js'
    source 'ui-bootstrap-tpls.js'
    source 'ui-bootstrap-csp.css' >> 'css/'
  }

  'angular-webstorage'() {
    source 'angular-webstorage.js'
  }

}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}

karma {
  profile 'default'
  colors = true

  browsers = ['Chrome']
  frameworks = ['jasmine']
  reporters = ['junit', 'progress', 'coverage']
  preprocessors = [
    '**/grails-app/assets/javascripts/app/**/*.js': ['coverage']
  ]

  profile('default') {
    libraryBases = ['**/grails-app/assets/bower/']
    libraryFiles = ['**/jquery.js', '**/angular.js', '**/!(jquery|angular).js']

    sourceBases = ['**/grails-app/assets/javascripts/']
    sourceFiles = ['application.js', 'app/**/*.js']

    testBases = ['**/src/test/javascript/']
    testFiles = ['*.js']
  }
}
